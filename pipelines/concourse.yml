groups:
- name: develop
  jobs:
  - unit
  - dev-image
  - testflight
  - watsjs
  - rc
  - build-rc
  - build-rc-image
  - bin-smoke
  - upgrade
  - downgrade

- name: k8s
  jobs:
  - k8s-check-helm-params
  - k8s-smoke
  - k8s-topgun

- name: bosh
  jobs:
  - bosh-bump
  - bosh-smoke
  - bosh-topgun
  - bosh-prod-deploy
  - bosh-wings-deploy
  - bosh-check-props
  - merge-cbd

- name: images
  jobs:
  - unit-image
  - golang-builder-image

- name: publish
  jobs:
  - major
  - minor
  - shipit
  - publish-binaries
  - publish-image
  - publish-bosh-release
  - promote-cbd
  - bump-cbd-versions
  - publish-docs

- name: workers
  jobs:
  - install-windows-deps

jobs:
- name: unit-image
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: concourse
      resource: unit-dockerfile
      trigger: true
    - get: builder
  - task: build
    image: builder
    privileged: true
    config:
      platform: linux
      params:
        REPOSITORY: concourse/unit
        CONTEXT: ci/dockerfiles/unit
      inputs: [{name: concourse}, {name: ci}]
      outputs: [{name: image}]
      caches: [{path: cache}]
      run: {path: build}
  - put: unit-image
    params: {image: image/image.tar}

- name: golang-builder-image
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: concourse
      resource: golang-builder-dockerfile
      trigger: true
    - get: builder
    - get: golang-linux
      trigger: true
  - task: build-golang-builder-image
    image: builder
    privileged: true
  - put: golang-builder-image
    params: {image: image/image.tar}

- name: unit
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: concourse
      trigger: true
    - get: unit-image
      trigger: true
  - task: yarn-test
    image: unit-image
  - in_parallel:
    - task: unit
      image: unit-image
      input_mapping: {concourse: built-concourse}
      timeout: 1h
    - task: fly-darwin
      timeout: 1h
    - task: fly-windows
      timeout: 1h

- name: dev-image
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: concourse
      trigger: true
    - get: unit-image
      trigger: true
    - get: gdn
      trigger: true
    - get: dumb-init
      trigger: true
    - get: bosh-io-release-resource
      trigger: true
    - get: bosh-io-stemcell-resource
      trigger: true
    - get: cf-resource
      trigger: true
    - get: docker-image-resource
      trigger: true
    - get: git-resource
      trigger: true
    - get: github-release-resource
      trigger: true
    - get: hg-resource
      trigger: true
    - get: pool-resource
      trigger: true
    - get: registry-image-resource
      trigger: true
    - get: s3-resource
      trigger: true
    - get: semver-resource
      trigger: true
    - get: time-resource
      trigger: true
    - get: tracker-resource
      trigger: true
    - get: mock-resource
      trigger: true
    - get: builder
  - task: yarn-build
    image: unit-image
  - in_parallel:
    - task: fly-build-linux
    - task: fly-build-windows
    - task: fly-build-darwin
  - task: build-dev-image
    image: builder
    privileged: true
    input_mapping: {concourse: built-concourse}
  - put: dev-image
    params: {image: image/image.tar}
    get_params: {format: oci}

- name: testflight
  public: true
  max_in_flight: 2
  plan:
  - in_parallel:
    - get: concourse
      passed: [unit, dev-image]
      trigger: true
    - get: unit-image
      passed: [unit, dev-image]
      trigger: true
    - get: dev-image
      passed: [dev-image]
      trigger: true
      params: {format: oci}
    - get: postgres-image
      params: {format: oci}
  - task: docker-compose-testflight
    image: unit-image
    privileged: true
    timeout: 1h

- name: watsjs
  public: true
  max_in_flight: 2
  plan:
  - in_parallel:
    - get: concourse
      passed: [unit, dev-image]
      trigger: true
    - get: unit-image
      passed: [unit, dev-image]
      trigger: true
    - get: dev-image
      passed: [dev-image]
      trigger: true
      params: {format: oci}
    - get: postgres-image
      params: {format: oci}
  - task: docker-compose-watsjs
    image: unit-image
    privileged: true
    timeout: 1h

- name: upgrade
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: concourse
      passed: [unit, dev-image]
      trigger: true
    - get: dev-image
      passed: [dev-image]
      params: {format: oci}
      trigger: true
    - get: unit-image
      passed: [unit, dev-image]
    - get: concourse-image
      params: {format: oci}
    - get: postgres-image
      params: {format: oci}
  - task: upgrade-test
    privileged: true
    image: unit-image

- name: downgrade
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: concourse
      passed: [unit, dev-image]
      trigger: true
    - get: dev-image
      passed: [dev-image]
      params: {format: oci}
      trigger: true
    - get: unit-image
      passed: [unit, dev-image]
    - get: concourse-image
      params: {format: oci}
    - get: postgres-image
      params: {format: oci}
  - task: downgrade-test
    privileged: true
    image: unit-image

- name: k8s-smoke
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: concourse
      passed: [build-rc-image]
      trigger: true
    - get: concourse-rc-image
      passed: [build-rc-image]
      params: {format: oci}
      trigger: true
    - get: version
      passed: [build-rc-image]
      trigger: true
    - get: charts
      trigger: true
    - get: unit-image
      passed: [build-rc-image]
  - try:
      task: k8s-delete
      image: unit-image
      params:
        KUBE_CONFIG: ((kube_config))
        RELEASE_NAME: concourse-smoke
        CONCOURSE_IMAGE: concourse/concourse-rc
  - task: k8s-deploy
    image: unit-image
    input_mapping: {image-info: concourse-rc-image}
    params:
      KUBE_CONFIG: ((kube_config))
      RELEASE_NAME: concourse-smoke
      CONCOURSE_IMAGE: concourse/concourse-rc
  - task: k8s-smoke
    image: unit-image
    params:
      KUBE_CONFIG: ((kube_config))
      RELEASE_NAME: concourse-smoke
      MAX_TICKS: 180
  - task: k8s-delete
    image: unit-image
    params:
      KUBE_CONFIG: ((kube_config))
      RELEASE_NAME: concourse-smoke
      CONCOURSE_IMAGE: concourse/concourse-rc

- name: k8s-topgun
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: concourse
      passed: [k8s-smoke]
      trigger: true
    - get: version
      passed: [k8s-smoke]
      trigger: true
    - get: concourse-rc-image
      passed: [k8s-smoke]
      trigger: true
      params: {format: oci}
    - get: unit-image
      passed: [k8s-smoke]
      trigger: true
    - get: charts
      trigger: true
      passed: [k8s-smoke]
  - task: k8s-topgun
    image: unit-image
    params:
      KUBE_CONFIG: ((kube_config))
      CONCOURSE_IMAGE_NAME: concourse/concourse-rc

- name: k8s-check-helm-params
  public: true
  max_in_flight: 1
  plan:
  - in_parallel:
    - get: concourse
      passed: [build-rc-image]
      trigger: true
    - get: concourse-rc-image
      passed: [build-rc-image]
      trigger: true
    - get: version
      passed: [build-rc-image]
      trigger: true
    - get: unit-image
      passed: [build-rc-image]
      trigger: true
    - get: linux-rc
      passed: [build-rc-image]
      trigger: true
    - get: charts
      trigger: true
  - task: check-distribution-env
    image: unit-image
    input_mapping: {distribution: charts}
    params: {DISTRIBUTION: helm}

- name: rc
  public: true
  serial_groups: [version]
  plan:
  - in_parallel:
    - get: concourse
      passed: [testflight, watsjs, upgrade, downgrade]
      trigger: true
    - get: dev-image
      trigger: true
      passed: [testflight, watsjs, upgrade, downgrade]
    - get: unit-image
      passed: [testflight, watsjs, upgrade, downgrade]
      trigger: true
  - put: version
    params: {pre: rc}

- name: build-rc
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: concourse
      passed: [rc]
      trigger: true
    - get: unit-image
      passed: [rc]
      trigger: true
    - get: dev-image
      passed: [rc]
      trigger: true
    - get: version
      passed: [rc]
      trigger: true
    - get: final-version
      resource: version
      passed: [rc]
      params: {bump: final}
  - in_parallel:
    - task: fly-build-linux
    - task: fly-build-windows
    - task: fly-build-darwin
  - task: hoist-linux-dependencies
    image: dev-image
  - task: yarn-build
    image: unit-image
  - in_parallel:
    - task: concourse-build-linux
      image: unit-image
      input_mapping: {concourse: built-concourse}
    - task: concourse-build-windows
      input_mapping: {concourse: built-concourse}
    - task: concourse-build-darwin
      input_mapping: {concourse: built-concourse}
  - in_parallel:
    - put: linux-rc
      params: {file: concourse-linux/concourse-*.tgz}
      inputs: [concourse-linux]
    - put: windows-rc
      params: {file: concourse-windows/concourse-*.zip}
      inputs: [concourse-windows]
    - put: darwin-rc
      params: {file: concourse-darwin/concourse-*.tgz}
      inputs: [concourse-darwin]

- name: build-rc-image
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: concourse
      passed: [build-rc]
      trigger: true
    - get: version
      passed: [build-rc]
      trigger: true
    - get: linux-rc
      trigger: true
      passed: [build-rc]
    - get: unit-image
      passed: [build-rc]
    - get: concourse-docker
      trigger: true
    - get: builder
  - task: build
    image: builder
    privileged: true
    file: concourse-docker/ci/build-image.yml
  - put: concourse-rc-image
    params:
      image: image/image.tar
      additional_tags: version/version

- name: bin-smoke
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: concourse
      passed: [build-rc]
      trigger: true
    - get: version
      passed: [build-rc]
      trigger: true
    - get: linux-rc
      passed: [build-rc]
      trigger: true
    - get: unit-image
      passed: [build-rc]
      trigger: true
  - task: terraform-smoke
    image: unit-image
    params:
      GCP_PROJECT: cf-concourse-production
      GCP_KEY: ((concourse_smoke_gcp_key))
      SSH_KEY: ((concourse_smoke_ssh_key))
      DEPLOYMENT: smoke
  - task: smoke
    image: unit-image
    input_mapping: {endpoint-info: outputs}

- name: bosh-check-props
  public: true
  max_in_flight: 1
  plan:
  - in_parallel:
    - get: concourse
      passed: [bin-smoke]
      trigger: true
    - get: unit-image
      passed: [bin-smoke]
      trigger: true
    - get: version
      passed: [bin-smoke]
      trigger: true
    - get: linux-rc
      passed: [bin-smoke]
      trigger: true
    - get: concourse-release-repo
      trigger: true
  - task: check-distribution-env
    image: unit-image
    input_mapping: {distribution: concourse-release-repo}
    params: {DISTRIBUTION: bosh}

- name: bosh-bump
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: concourse
      passed: [bosh-check-props]
      trigger: true
    - get: unit-image
      passed: [bosh-check-props]
      trigger: true
    - get: version
      passed: [bosh-check-props]
      trigger: true
    - get: linux-rc
      passed: [build-rc, bosh-check-props]
      trigger: true
    - get: windows-rc
      passed: [build-rc]
      trigger: true
    - get: concourse-release-repo
    - get: bosh-io-release-resource
      passed: [dev-image]
      trigger: true
    - get: bosh-io-stemcell-resource
      passed: [dev-image]
      trigger: true
    - get: cf-resource
      passed: [dev-image]
      trigger: true
    - get: docker-image-resource
      passed: [dev-image]
      trigger: true
    - get: git-resource
      passed: [dev-image]
      trigger: true
    - get: github-release-resource
      passed: [dev-image]
      trigger: true
    - get: hg-resource
      passed: [dev-image]
      trigger: true
    - get: pool-resource
      passed: [dev-image]
      trigger: true
    - get: registry-image-resource
      passed: [dev-image]
      trigger: true
    - get: s3-resource
      passed: [dev-image]
      trigger: true
    - get: semver-resource
      passed: [dev-image]
      trigger: true
    - get: time-resource
      passed: [dev-image]
      trigger: true
    - get: tracker-resource
      passed: [dev-image]
      trigger: true
    - get: mock-resource
      passed: [dev-image]
      trigger: true
  - task: ubuntu-image-replace
  - task: bump-concourse-blobs
    image: unit-image
    params: {GCP_JSON_KEY: ((concourse_artifacts_json_key))}
    input_mapping: {linux-rc: ubuntu-linux-rc}
  - put: concourse-release-repo
    params: {repository: bumped-concourse-release-repo}

- name: bosh-smoke
  public: true
  serial: true
  plan:
  - in_parallel:
    # these don't trigger, to ensure that the job gets triggered by
    # concourse-release, which is unfortunately decoupled from the resource
    # that we 'put' to.
    - get: concourse
      passed: [bosh-bump]
    - get: unit-image
      passed: [bosh-bump]
    - get: version
      passed: [bosh-bump]
    - get: concourse-release
      trigger: true
    - get: postgres-release
      trigger: true
    - get: bpm-release
      trigger: true
    - get: gcp-xenial-stemcell
      trigger: true
  - put: smoke-deployment
    params:
      manifest: ci/deployments/bosh-smoke.yml
      releases:
      - concourse-release/*.tgz
      - postgres-release/*.tgz
      - bpm-release/*.tgz
      stemcells:
      - gcp-xenial-stemcell/*.tgz
      vars:
        deployment_name: concourse-smoke
  - task: discover-bosh-endpoint-info
    image: unit-image
    params:
      BOSH_ENVIRONMENT: ((bosh_target))
      BOSH_CLIENT: ((bosh_client.id))
      BOSH_CLIENT_SECRET: ((bosh_client.secret))
      BOSH_DEPLOYMENT: concourse-smoke
      BOSH_INSTANCE_GROUP: concourse
  - task: smoke
    image: unit-image

- name: bosh-topgun
  public: true
  serial: true
  interruptible: true
  plan:
  - in_parallel:
    # these don't trigger, to ensure that the job gets triggered by
    # concourse-release, which is unfortunately decoupled from the resource
    # that we 'put' to.
    - get: concourse
      passed: [bosh-bump]
    - get: unit-image
      passed: [bosh-bump]
    - get: version
      passed: [bosh-bump]
    - get: concourse-release
      trigger: true
    - get: postgres-release
      trigger: true
    - get: bpm-release
      trigger: true
    - get: backup-and-restore-sdk-release
      trigger: true
    - get: gcp-xenial-stemcell
      trigger: true
    - get: vault-release
      trigger: true
    - get: credhub-release
      trigger: true
    - get: bbr
      trigger: true
  - task: topgun
    image: unit-image
    input_mapping:
      stemcell: gcp-xenial-stemcell
    params:
      BOSH_ENVIRONMENT: ((bosh_target))
      BOSH_CA_CERT: ((tmp_bosh_client.ca_cert))
      BOSH_CLIENT: ((bosh_client.id))
      BOSH_CLIENT_SECRET: ((bosh_client.secret))
      BOSH_SSH_KEY: ((topgun_bosh_key))
      AWS_REGION: ((topgun_aws_ssm.region))
      AWS_ACCESS_KEY_ID: ((topgun_aws_ssm.access_key_id))
      AWS_SECRET_ACCESS_KEY: ((topgun_aws_ssm.secret_access_key))

- name: bosh-prod-deploy
  public: true
  serial: true
  interruptible: true
  plan:
  - in_parallel:
    - get: concourse
      passed: [bosh-smoke, bosh-topgun]
      trigger: true
    - get: version
      passed: [bosh-smoke, bosh-topgun]
      trigger: true
    - get: concourse-release
      passed: [bosh-smoke, bosh-topgun]
      trigger: true
    - get: postgres-release
      passed: [bosh-smoke, bosh-topgun]
      trigger: true
    - get: bpm-release
      passed: [bosh-smoke, bosh-topgun]
      trigger: true
    - get: gcp-xenial-stemcell
      passed: [bosh-smoke, bosh-topgun]
      trigger: true
    - get: cbd
      trigger: true
    - get: gcp-windows-stemcell
    - get: bbr-sdk-release
    - get: prod
  - put: prod-deployment
    params:
      manifest: cbd/cluster/concourse.yml
      stemcells:
      - gcp-xenial-stemcell/*.tgz
      - gcp-windows-stemcell/*.tgz
      releases:
      - concourse-release/*.tgz
      - postgres-release/*.tgz
      - bpm-release/*.tgz
      - bbr-sdk-release/*.tgz
      ops_files:
      - cbd/cluster/operations/scale.yml
      - cbd/cluster/operations/dev-versions.yml
      - cbd/cluster/operations/privileged-http.yml
      - cbd/cluster/operations/tls.yml
      - cbd/cluster/operations/privileged-https.yml
      - cbd/cluster/operations/basic-auth.yml
      - cbd/cluster/operations/github-auth.yml
      - cbd/cluster/operations/encryption.yml
      - cbd/cluster/operations/vault-tls-cert-auth.yml
      - cbd/cluster/operations/influxdb.yml
      - cbd/cluster/operations/db-stats.yml
      - cbd/cluster/operations/web-network-extension.yml
      - cbd/cluster/operations/team-authorized-keys.yml
      - cbd/cluster/operations/untrusted-worker.yml
      - cbd/cluster/operations/debug-untrusted-worker.yml
      - cbd/cluster/operations/scale-untrusted-worker.yml
      - cbd/cluster/operations/windows-worker.yml
      - cbd/cluster/operations/telegraf-postgres.yml
      - cbd/cluster/operations/syslog_forwarder.yml
      - cbd/cluster/operations/backup-atc.yml
      - cbd/cluster/operations/task-limits.yml
      - cbd/cluster/operations/windows-worker-network.yml
      - cbd/cluster/operations/syslog-drainer.yml
      - cbd/cluster/operations/container-placement-strategy.yml
      - cbd/cluster/operations/worker-rebalancing.yml
      - cbd/cluster/operations/enable-global-resources.yml
      - cbd/cluster/operations/x-frame-options-unset.yml
      - cbd/cluster/operations/worker-volume-sweeper-max-in-flight.yml
      - cbd/cluster/operations/vault-shared-path.yml
      - prod/prod/ops.yml
      vars_files:
      - cbd/versions.yml
      vars:
        deployment_name: concourse-prod
        web_instances: 3
        worker_instances: 8
        external_url: "https://ci.concourse-ci.org"
        web_vm_type: web
        db_vm_type: database
        worker_vm_type: worker
        untrusted_worker_vm_type: worker
        db_persistent_disk_type: large
        network_name: private
        web_network_name: web
        untrusted_worker_network_name: private
        web_network_vm_extension: concourse-web-target-pool
        untrusted_worker_deny_networks: [10.0.0.0/16]
        untrusted_worker_tags: [pr]
        untrusted_worker_instances: 3
        windows_worker_tsa_host: ci.concourse-ci.org:2222
        windows_worker_os: windows2016
        windows_worker_vm_type: worker
        windows_worker_network_name: windows
        syslog_address: logs2.papertrailapp.com
        syslog_port: '51403'
        syslog_permitted_peer: "*.papertrailapp.com"
        default_task_memory_limit: 5GB
        default_task_cpu_limit: 1024
        container_placement_strategy: "fewest-build-containers"
        worker_rebalance_interval: 30m
        volume_sweeper_max_in_flight: 3
        vault_shared_path: "shared"

- name: bosh-wings-deploy
  serial: true
  plan:
  - in_parallel:
    - get: concourse
      passed: [bosh-prod-deploy]
    - get: version
      passed: [bosh-prod-deploy]
    - get: concourse-release
      passed: [bosh-prod-deploy]
    - get: bpm-release
      passed: [bosh-prod-deploy]
    - get: gcp-xenial-stemcell
      passed: [bosh-prod-deploy]
    - get: cbd
      passed: [bosh-prod-deploy]
    - get: prod
  - put: wings-deployment
    params:
      manifest: cbd/cluster/concourse.yml
      stemcells:
      - gcp-xenial-stemcell/*.tgz
      releases:
      - concourse-release/*.tgz
      - bpm-release/*.tgz
      ops_files:
      - cbd/cluster/operations/dev-versions.yml
      - cbd/cluster/operations/privileged-http.yml
      - cbd/cluster/operations/privileged-https.yml
      - cbd/cluster/operations/tls.yml
      - cbd/cluster/operations/web-network-extension.yml
      - cbd/cluster/operations/scale.yml
      - cbd/cluster/operations/syslog_forwarder.yml
      - cbd/cluster/operations/team-authorized-keys.yml
      - cbd/cluster/operations/storage-driver.yml
      - cbd/cluster/operations/external-postgres.yml
      - cbd/cluster/operations/external-postgres-tls.yml
      - cbd/cluster/operations/influxdb.yml
      - cbd/cluster/operations/container-placement-strategy.yml
      - cbd/cluster/operations/github-auth.yml
      - cbd/cluster/operations/add-local-users.yml
      - cbd/cluster/operations/worker-rebalancing.yml
      - cbd/cluster/operations/encryption.yml
      - cbd/cluster/operations/garden-dns.yml
      - cbd/cluster/operations/max-in-flight.yml
      - cbd/cluster/operations/worker-max-in-flight.yml
      - cbd/cluster/operations/enable-global-resources.yml
      - prod/wings/ops.yml
      vars_files:
      - prod/wings/vars.yml

- name: shipit
  public: true
  serial_groups: [version]
  plan:
  - get: concourse
    passed:
    - build-rc
    - k8s-topgun
    - k8s-check-helm-params
    - bosh-smoke
    - bosh-topgun
  - get: unit-image
    passed:
    - build-rc
    - k8s-topgun
    - k8s-check-helm-params
    - bosh-smoke
    - bosh-topgun
  - get: final-version
    resource: version
    params: {bump: final}
    passed:
    - build-rc
    - k8s-topgun
    - k8s-check-helm-params
    - bosh-smoke
    - bosh-topgun
  - get: linux-rc
    passed: [build-rc]
  - get: windows-rc
    passed: [build-rc]
  - get: darwin-rc
    passed: [build-rc]
  - get: concourse-rc-image
    passed: [k8s-topgun, k8s-check-helm-params]
  - get: concourse-release
    passed: [bosh-smoke, bosh-topgun]
  - get: bpm-release
    passed: [bosh-smoke, bosh-topgun]
  - get: postgres-release
    passed: [bosh-smoke, bosh-topgun]
  - put: version
    params: {file: final-version/version}

- name: publish-binaries
  serial: true
  plan:
  - in_parallel:
    - get: version
      passed: [shipit]
      trigger: true
    - get: concourse
      passed: [shipit]
    - get: unit-image
      passed: [shipit]
    - get: linux-rc
      passed: [shipit]
    - get: windows-rc
      passed: [shipit]
    - get: darwin-rc
      passed: [shipit]
    - get: release-notes
    - get: docs
  - in_parallel:
    - task: prep-release-assets
      file: release-notes/ci/prep-release-assets.yml
      image: unit-image
    - task: build-release-notes
      file: release-notes/ci/build.yml
      image: unit-image
  - put: concourse-github-release
    params:
      commitish: concourse/.git/ref
      tag: version/version
      tag_prefix: v
      name: built-notes/release-name
      body: built-notes/notes.md
      globs:
      - concourse-linux/concourse-*.tgz
      - concourse-windows/concourse-*.zip
      - concourse-darwin/concourse-*.tgz
      - fly-linux/fly-*.tgz
      - fly-windows/fly-*.zip
      - fly-darwin/fly-*.tgz
      - concourse-linux/*.sha1
      - concourse-windows/*.sha1
      - concourse-darwin/*.sha1
      - fly-linux/*.sha1
      - fly-windows/*.sha1
      - fly-darwin/*.sha1

- name: publish-bosh-release
  serial: true
  plan:
  - in_parallel:
    - get: version
      passed: [shipit]
      trigger: true
    - get: concourse-release
      passed: [shipit]
  - put: concourse-release-final
    params:
      tarball: concourse-release/*.tgz
      version: version/version

- name: bump-cbd-versions
  serial: true
  plan:
  - in_parallel:
    - get: concourse-boshio
      trigger: true
    - get: unit-image
      passed: [shipit]
    - get: cbd-master
    - get: version
      passed: [shipit]
    - get: bpm-release
      passed: [shipit]
    - get: postgres-release
      passed: [shipit]
  - task: bump-versions
    file: cbd-master/ci/bump-versions.yml
    input_mapping: {concourse-bosh-deployment: cbd-master}
    image: unit-image
  - put: cbd-master
    params:
      repository: bumped-repo
      merge: true

- name: promote-cbd
  serial: true
  plan:
  - in_parallel:
    - get: version
      passed: [shipit]
      trigger: true
    - get: cbd
    - get: unit-image
      passed: [shipit]
    - get: bpm-release
      passed: [shipit]
    - get: postgres-release
      passed: [shipit]
  - put: cbd-master
    params:
      repository: cbd
      merge: true

- name: publish-image
  serial: true
  plan:
  - in_parallel:
    - get: version
      passed: [shipit]
      trigger: true
    - get: concourse
      passed: [shipit]
    - get: concourse-rc-image
      passed: [shipit]
      params: {format: oci}
    - get: latest-version
  - task: docker-semver-tags
    input_mapping:
      latest-of-same-major-version: latest-version
  - put: concourse-image
    params:
      image: concourse-rc-image/image.tar
      additional_tags: tags/tags

- name: publish-docs
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: version
      passed: [shipit]
      trigger: true
    - get: docs
  - task: build-docs
    file: docs/ci/build.yml
    params: {ANALYTICS_ID: ((analytics_id))}
  - put: docs-gh-pages
    params: {repository: built-docs}

- name: merge-cbd
  public: true
  serial: true
  plan:
  - get: cbd-master
    trigger: true
  - put: cbd
    params:
      repository: cbd-master
      merge: true

- name: install-windows-deps
  public: true
  serial: true
  plan:
  - in_parallel:
    - get: concourse
      params: {submodules: none}
    - get: golang-windows
  - task: install-go-windows
  - task: choco-install
    params: {PACKAGE: git}
  - task: choco-install
    params: {PACKAGE: mingw}

- name: major
  public: true
  serial_groups: [version]
  plan:
  - put: version
    params: {bump: major, pre: rc}

- name: minor
  public: true
  serial_groups: [version]
  plan:
  - put: version
    params: {bump: minor, pre: rc}
